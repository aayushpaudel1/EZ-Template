"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3359],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),f=o,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},940:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={title:"PTO Tutorial",description:"PTO (Power Take Off) tutorial. A system to share power between 2 mechanisms using pnuematicly actuated gears."},s="**PTO Tutorial**",u={unversionedId:"Tutorials/pto_tutorial",id:"Tutorials/pto_tutorial",title:"PTO Tutorial",description:"PTO (Power Take Off) tutorial. A system to share power between 2 mechanisms using pnuematicly actuated gears.",source:"@site/docs/Tutorials/pto_tutorial.md",sourceDirName:"Tutorials",slug:"/Tutorials/pto_tutorial",permalink:"/EZ-Template/Tutorials/pto_tutorial",draft:!1,tags:[],version:"current",frontMatter:{title:"PTO Tutorial",description:"PTO (Power Take Off) tutorial. A system to share power between 2 mechanisms using pnuematicly actuated gears."},sidebar:"tutorialSidebar",previous:{title:"PID Tutorial",permalink:"/EZ-Template/Tutorials/pid"},next:{title:"Tuning Constants",permalink:"/EZ-Template/Tutorials/tuning_constants"}},c={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Example",id:"example",level:2}],m={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pto-tutorial"},(0,i.kt)("strong",{parentName:"h1"},"PTO Tutorial")),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"PTO (power take off) is used to share power between two mechanisms, usually between the drive and something else.  For example, a 6 motor drive could pneumatically shift to a 4 motor drive and a 2 motor intake.  "),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"pros::Motor& intake_l = chassis.left_motors[1];\npros::Motor& intake_r = chassis.right_motors[1];\npros::ADIDigitalOut pto_intake_piston('A');\nbool pto_intake_enabled = false;\n\nvoid pto_intake(bool toggle) {\n  pto_intake_enabled = toggle;\n  chassis.pto_toggle({intake_l, intake_r}, toggle);\n  pto_intake_piston.set_value(toggle);\n  if (toggle) {\n    intake_l.set_brake_mode(pros::E_MOTOR_BRAKE_COAST);\n    intake_r.set_brake_mode(pros::E_MOTOR_BRAKE_COAST);\n  }\n}\n\nvoid set_intake(int input) {\n  if (!pto_intake_enabled) return;\n  intake_l = input;\n  intake_r = input;\n}\n\nint button_lock = 0;\nvoid intake_control() {\n  if (master.get_digital(DIGITAL_DOWN) && button_lock == 0) {\n    pto_intake(!pto_intake_enabled);\n    button_lock = 1;\n  } else if (!master.get_digital(DIGITAL_DOWN)) {\n    button_lock = 0;\n  }\n\n  if (master.get_digital(DIGITAL_L1))\n    set_intake(127);\n  else if (master.get_digital(DIGITAL_L2))\n    set_intake(-127);\n  else\n    set_intake(0);\n}\n\nvoid opcontrol() {\n  // This is preference to what you like to drive on.\n  chassis.set_drive_brake(MOTOR_BRAKE_COAST);\n\n  while (true) {\n\n    chassis.tank(); // Tank control\n\n    intake_control();\n\n    pros::delay(ez::util::DELAY_TIME); // This is used for timer calculations!  Keep this ez::util::DELAY_TIME\n  }\n}\n\n")))}f.isMDXComponent=!0}}]);